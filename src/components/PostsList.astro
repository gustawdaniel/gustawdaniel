---
import {getCollection, type CollectionEntry} from "astro:content";
const locale = Astro.currentLocale ?? 'en';

interface Props {
    featured: boolean;
    reducer?: (collection: CollectionEntry<"blog">[]) => CollectionEntry<"blog">[];
}

const {featured, reducer} = Astro.props;

import { getRelativeLocaleUrl } from 'astro:i18n';
import {stripLang} from "../helpers/i18n/stripLang";
import {fixBlogLocale} from "../helpers/i18n/fixBlogLocale";

const allBlogPosts: CollectionEntry<"blog">[] = await getCollection(
    'blog',
    (post) => post.slug.startsWith(locale)
);

import PostCoverOnList from "./blog/PostCoverOnList.astro";
import PostDescriptionOnList from "./blog/PostDescriptionOnList.astro";
import FirstPostCardOnList from "./blog/FirstPostCardOnList.astro";

const postsToDisplay = reducer ? reducer(allBlogPosts) : allBlogPosts;
---


<div class="bg-white dark:bg-slate-900">
    <div class="mx-auto max-w-7xl px-6 lg:px-8">


        <!--<div class="grid  lg:mx-0 lg:max-w-none lg:grid-cols-3 max-w-2xl mx-auto">-->

        <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-8 gap-y-20 mt-16 ">

            {postsToDisplay.length && featured && <FirstPostCardOnList article={postsToDisplay.at(-1)!} />}
            {postsToDisplay.reverse().filter((_,i:number) => i>(Number(Boolean(featured)) - 1)).map(p =>
                    <a  href={
                        fixBlogLocale(getRelativeLocaleUrl(locale, 'posts/' + locale + stripLang(p.slug)), locale)
                    }>

                        <article class="flex flex-col items-start justify-between">


                            <PostCoverOnList data={p.data} />

                            <PostDescriptionOnList data={p.data} body={p.body} />

                        </article>

                    </a>

            )}
        </div>



        <!--</div>-->
    </div>
</div>


