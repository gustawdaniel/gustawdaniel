---
import {getCollection, type CollectionEntry} from "astro:content";

const allDevNotes: CollectionEntry<"note">[] = await getCollection(
    'note',
);

import {prettyDate} from "../../helpers/prettyDate";
import {readingTime} from "../../helpers/readingTime";
import {computeMarkdownStatistics} from "../../helpers/computeMarkdownStatistics";

const locale = Astro.currentLocale ?? 'en';

const enhancedDevNotes = allDevNotes.map(note => {
    return {
        ...note,
        markdownStatistics: computeMarkdownStatistics(note.body),
    }
});

---

<div class="bg-white dark:bg-slate-900 py-24 sm:py-32">
    <div class="mx-auto max-w-7xl px-2 sm:px-6 lg:px-8">
        <div class="mx-auto max-w-2xl text-center">
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-4xl">Dev notes</h2>
            <p class="mt-2 text-lg leading-8 text-gray-600 dark:text-gray-300">Short form with concise instructions or solutions that I see worth to share.</p>
        </div>
    </div>
</div>

<ul role="list" class="divide-y divide-gray-100 dark:divide-gray-800 px-2 ">
    {enhancedDevNotes.map(note => (
        <li class="relative py-5 hover:bg-gray-50 dark:hover:bg-slate-800">
            <a href={`/notes/${note.slug}`} class="px-4 sm:px-6 lg:px-8">
                <div class="mx-auto flex max-w-4xl justify-between gap-x-6">
                    <div class="flex min-w-0 gap-x-4">
                        <div class="min-w-0 flex-auto">
                            <p class="text-sm font-semibold leading-6 text-gray-900 dark:text-gray-100">
                                <span>
                                    <span class="absolute inset-x-0 -top-px bottom-0"></span>
                                    {note.data.title}
                                </span>
                            </p>
                            <p class="mt-1 flex text-xs leading-5 text-gray-500 dark:text-gray-400">
                                <time datetime={note.data.publishDate.toISOString()} class="relative truncate">{prettyDate(note.data.publishDate, locale)}</time>
                            </p>
                        </div>
                    </div>
                    <div class="flex shrink-0 items-center gap-x-4">
                        <div class="hidden sm:flex sm:flex-col sm:items-end">
                            <p class="text-sm leading-6 text-gray-900 dark:text-gray-100">{note.markdownStatistics}</p>
                            <p class="mt-1 text-xs leading-5 text-gray-500 dark:text-gray-400">{readingTime(note.body)} read</p>
                        </div>
                        <svg class="h-5 w-5 flex-none text-gray-400" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                            <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                        </svg>
                    </div>
                </div>
            </a>
        </li>
    ))}
</ul>