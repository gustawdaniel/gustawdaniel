---
import {locales} from '../locales';

const currentLocale = Astro.currentLocale as 'en' | 'pl' | 'es';
import {getRelativeLocaleUrl} from 'astro:i18n';
import {stripLang} from "../helpers/i18n/stripLang";
import {fixBlogLocale} from "../helpers/i18n/fixBlogLocale";
const currentPathWithLang = Astro.url.pathname;
const currentPath = stripLang(currentPathWithLang)

import {getCollection, getEntry} from 'astro:content';

let entry: undefined | { data: { canonicalName: string } } = undefined
let translatedPosts: { slug: string }[] = []

function getPostId(path: string): string {
    path = path.replace('/posts/', '');
    return path.replace(/\/$/, '');
}

if (currentPath.includes('posts/')) {
    entry = await getEntry('blog', getPostId(currentPath));
    translatedPosts = await getCollection('blog',
        (post) => entry && post.data.canonicalName === entry.data.canonicalName
    );
}
---

<div>
    {locales.map(
        locale => <span>
            <a class:list={['uppercase', {'font-bold text-indigo-400': locale === currentLocale}]}
               href={
                   fixBlogLocale(
                       getRelativeLocaleUrl(
                           locale,
                           currentPath
                       ),
                       locale,
                       translatedPosts.map(p => p.slug)
                   )
               }>{locale}</a>
        </span>
    )}
</div>
